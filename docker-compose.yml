version: '3.7'
services:
  postgres:
    container_name: postgres
    build: 
      context: .
      dockerfile: dockerfile.postgres
    ports:
      - 5433:5432
    networks:
      - backend_network

  cadastrol-server:
    container_name: cadastrol-server
    build: 
      context: .
      dockerfile: dockerfile.java-maven
    ports:
      - 8090:8090
    depends_on:
      - postgres
    networks:
      - backend_network

  nginx:
    container_name: nginx
    build: 
      context: .
      dockerfile: dockerfile.nginx
    ports:
      - 8000:8000
    depends_on:
      - cadastrol-server
    networks:
      - backend_network

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    ports:
      - 9100:9100
    networks:
      - backend_network

  cadvisor:
    container_name: cadvisor
    image: google/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - backend_network

  pg-exporter:
    container_name: pg-exporter
    build: 
      context: .
      dockerfile: dockerfile.pg-exporter
    ports:
      - 9630:9630
    depends_on:
      - postgres
    networks:
      - backend_network

  prometheus:
    container_name: prometheus
    build: 
      context: .
      dockerfile: dockerfile.prometheus
    ports:
      - 9090:9090
    depends_on:
      - nginx
      - node-exporter
      - cadvisor
      - pg-exporter  
    networks:
      - backend_network
  
  grafana:
    container_name: grafana
    build: 
      context: .
      dockerfile: dockerfile.grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - backend_network

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    networks: 
      - backend_network

networks:
  backend_network:
    name: backend_network
